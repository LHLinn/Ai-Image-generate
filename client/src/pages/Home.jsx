import React, {useState, useEffect} from "react";
import { Loader, Card, FormField } from "../components";
import {Link} from "react-router-dom";

const RenderCards = ({ data, title}) => {
    if(data?.length>0) {
        return data.map((post)=> <Card key = {post._id}{...post}/>)
}
    return(
        <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
    )
}

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setsearchText] = useState('');
  const [searchedResults, setSearchedResults] = useState(null);
  const [searchTimeout, setsearchTimeout] = useState(null);

  useEffect(()=>{
    const fetchPosts = async()=>{
      setLoading(true);
      try {
        const response = await fetch('http://localhost:8080/api/v1/post', {
          method: 'GET',
          headers:{'Content-Type': 'application/json'},
        })
        if(response.ok){
          const result = await response.json();
          setAllPosts(result.data.reverse());
        }
      } catch (error) {
        alert(error);
        
      }finally{
        setLoading(false);
      }
    }
    fetchPosts();

  },[]);

  const handleSearchChange = (e) =>{
    clearTimeout(searchTimeout);
    setsearchText(e.target.value);
    setsearchTimeout(
      setTimeout(()=>{
        const searchResults = allPosts.filter((item)=> item.name.toLowerCase().includes(searchText.toLowerCase())|| item.prompt.toLowerCase().includes(searchText.toLowerCase()));
        setSearchedResults(searchResults);
      }, 500)
    );
    
  }

  return(
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">
           Community Showcase 
        </h1>
        <p className="mt-2 text-[#666e75] text-[24px] max-w[500px]">Browse Through a Collection of imaginative and visually stunning images generated by DALL-E AI</p>
      </div>
      <div className="mt-16">
        <FormField 
          LabelName='Search Posts'
          type='text'
          name='text'
          placeholder='Search Posts'
          value = {searchText}
          handleChange={handleSearchChange}
        />
      </div>
      <div className="flex justify-center items-center">
        <p className="mt-3 font-bold text-[24px] text-center">
          Explore ideas
        </p>

      </div>
      <div className="mt-5">
        {loading ? (
            <div className="flex justify-center items-center">
                <Loader />
            </div>
        ) :(
            <>
            {searchText && (
                <h2 className="font-medium text-[#666e75] text-xl mb-3">
                    Showing Results For <span className="text-[#222328]">{searchText}</span>
                </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                {searchText ?(
                    <RenderCards
                      data = {searchedResults}
                      title = "No search results found"
                    /> 
                ):(
                    <RenderCards 
                      data = {allPosts}
                      title = "No posts found"
                    />
                )
            }
            </div>
            </>
        )}
        <div className="mt-9 flex justify-center items-center">
          <Link to="/create-post" className="text-white bg-[#6469ff] rounded-md text-lg w-full sm:w-auto px-5 py-2.5 text-center">
            Generate your own images!
          </Link>
        </div>
      </div>
    </section>
  )
}

export default Home